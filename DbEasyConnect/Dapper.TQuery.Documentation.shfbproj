<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Import the common properties to support NuGet restore -->
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <!-- A framework version is required for NuGet restore.  This can be any valid version -->
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <!-- The configuration and platform will be used to determine which assemblies to include from solution and
				 project documentation sources -->
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e4ee10af-50b2-45fe-b962-07fc9e7cf45f}</ProjectGuid>
    <SHFBSchemaVersion>2017.9.26.0</SHFBSchemaVersion>
    <!-- AssemblyName, Name, and RootNamespace are not used by SHFB but Visual Studio adds them anyway -->
    <AssemblyName>Documentation</AssemblyName>
    <RootNamespace>Documentation</RootNamespace>
    <Name>Documentation</Name>
    <!-- SHFB properties -->
    <FrameworkVersion>.NET Framework 4.7.2</FrameworkVersion>
    <OutputPath>.\Help\</OutputPath>
    <HtmlHelpName>DapperTQuery Documentation</HtmlHelpName>
    <Language>en-US</Language>
    <HelpFileFormat>HtmlHelp1, MSHelpViewer, Website</HelpFileFormat>
    <SyntaxFilters>C#</SyntaxFilters>
    <PresentationStyle>VS2013</PresentationStyle>
    <CleanIntermediates>True</CleanIntermediates>
    <KeepLogFile>True</KeepLogFile>
    <DisableCodeBlockComponent>False</DisableCodeBlockComponent>
    <IndentHtml>False</IndentHtml>
    <BuildAssemblerVerbosity>AllMessages</BuildAssemblerVerbosity>
    <SaveComponentCacheCapacity>100</SaveComponentCacheCapacity>
    <HelpTitle>Dapper.TQuery Library Reference</HelpTitle>
    <HelpFileVersion>1.0.0.0</HelpFileVersion>
    <NamingMethod>MemberName</NamingMethod>
    <ContentPlacement>AboveNamespaces</ContentPlacement>
    <RootNamespaceContainer>False</RootNamespaceContainer>
    <RootNamespaceTitle>Dapper.TQuery</RootNamespaceTitle>
    <NamespaceGrouping>False</NamespaceGrouping>
    <MaximumGroupParts>2</MaximumGroupParts>
    <Preliminary>False</Preliminary>
    <CopyrightText>&amp;#169%3b 2021 QuickApps.ca, All rights reserved.</CopyrightText>
    <FeedbackEMailAddress>info%40quickapps.ca</FeedbackEMailAddress>
    <FeedbackEMailLinkText>Send Feedback</FeedbackEMailLinkText>
    <SdkLinkTarget>Blank</SdkLinkTarget>
    <HtmlSdkLinkType>Msdn</HtmlSdkLinkType>
    <BinaryTOC>True</BinaryTOC>
    <IncludeFavorites>True</IncludeFavorites>
    <WebsiteSdkLinkType>Msdn</WebsiteSdkLinkType>
    <AppendMarkdownFileExtensionsToUrls>False</AppendMarkdownFileExtensionsToUrls>
    <ProjectSummary>Communicate with any database the fastest way with easiest configuration, and strongly typed written.
This Library was created to replace &amp;lt%3bsee href=&amp;quot%3bhttps://docs.microsoft.com/en-us/ef/&amp;quot%3b&amp;gt%3bEntity Framework&amp;lt%3b/see&amp;gt%3b complexity, Slow-performing, and diagnose issues. Learn more &amp;lt%3bsee href=&amp;quot%3bhttps://www.iamtimcorey.com/blog/137806/entity-framework&amp;quot%3b&amp;gt%3bhere&amp;lt%3b/see&amp;gt%3b.
It is based on the &amp;lt%3bsee cref=&amp;quot%3bDapper&amp;quot%3b/&amp;gt%3b library, with the following advantages:
Use &amp;lt%3bsee cref=&amp;quot%3bDapper&amp;quot%3b/&amp;gt%3b with most of &amp;lt%3bsee cref=&amp;quot%3bSystem.Linq&amp;quot%3b/&amp;gt%3b methods as an &amp;lt%3bsee cref=&amp;quot%3bIQueryable&amp;quot%3b/&amp;gt%3b object without downloading the records. &amp;lt%3bsee href=&amp;quot%3bhttps://stackoverflow.com/q/27563096/6509536&amp;quot%3b&amp;gt%3bDapper.NET and IQueryable issue&amp;lt%3b/see&amp;gt%3b.
Use Code First feature, or/and modify the database from the code, with just one or two lines of code.
Use the fastest easiest way for CRUD %28Create, Read, Update, and Delete%29 operations, Find by ID, bulk insert/update/delete even with Entity List.
Gives a strong typed coding experience, to querying the database similar to entity framework, and avoid spelling mistakes on table and field names.
</ProjectSummary>
    <DocumentationSources>
      <DocumentationSource sourceFile="obj\Debug\netstandard2.1\Dapper.TQuery.dll" />
<DocumentationSource sourceFile="obj\Debug\netstandard2.1\Dapper.TQuery.xml" /></DocumentationSources>
    <MissingTags>AutoDocumentCtors, AutoDocumentDispose</MissingTags>
    <ComponentConfigurations>
      <ComponentConfig id="API Token Resolution" enabled="True" xmlns="">
        <component id="API Token Resolution">{@TokenFiles}
<replace elements="/*//token" item="string(.)" /></component>
      </ComponentConfig>
      <ComponentConfig id="Code Block Component" enabled="True" xmlns="">
        <component id="Code Block Component">
          <basePath value="{@HtmlEncProjectFolder}" />
          <outputPaths>{@HelpFormatOutputPaths}</outputPaths>
          <allowMissingSource value="false" />
          <removeRegionMarkers value="false" />
          <colorizer syntaxFile="{@SHFBFolder}PresentationStyles\Colorizer\highlight.xml" styleFile="{@SHFBFolder}PresentationStyles\Colorizer\highlight.xsl" stylesheet="{@SHFBFolder}PresentationStyles\Colorizer\highlight.css" scriptFile="{@SHFBFolder}PresentationStyles\Colorizer\highlight.js" disabled="{@DisableCodeBlockComponent}" language="cs" tabSize="0" numberLines="false" outlining="false" keepSeeTags="false" defaultTitle="true" />
        </component>
      </ComponentConfig>
      <ComponentConfig id="Comments Index Data (ESENT Cache)" enabled="True" xmlns="">
        <component id="Comments Index Data (ESENT Cache)">
          <index name="comments" value="/doc/members/member" key="@name" cache="30" localCacheSize="2500" frameworkCachePath="{@LocalDataFolder}Cache\CommentsIndexCache" projectCachePath="">
	{@FrameworkCommentList}
	{@CommentFileList}
</index>
          <copy name="comments" source="*" target="/document/comments" />
        </component>
      </ComponentConfig>
      <ComponentConfig id="IntelliSense Component" enabled="True" xmlns="">
        <component id="IntelliSense Component">
          <output includeNamespaces="false" namespacesFile="Namespaces" folder="{@OutputFolder}" boundedCapacity="100" />
        </component>
      </ComponentConfig>
      <ComponentConfig id="Resolve Reference Links (ESENT Cache)" enabled="True" xmlns="">
        <component id="Resolve Reference Links (ESENT Cache)">{@HRefFormat}
<locale value="{@Locale}" /><linkTarget value="{@SdkLinkTarget}" /><helpOutput format="HtmlHelp1"><memberIdUrlCache path="{@LocalDataFolder}Cache\MemberIdUrl.cache" cachePath="{@LocalDataFolder}Cache\ESentMemberIdUrlCache" localCacheSize="2500" /><targets base="{@FrameworkReflectionDataFolder}" recurse="true" files="*.xml" type="{@HtmlSdkLinkType}" id="FrameworkTargets" cachePath="{@LocalDataFolder}Cache\ESentFrameworkTargetCache" localCacheSize="2500">
		{@ReferenceLinkNamespaceFiles}
	</targets><targets files="reflection.xml" type="Local" id="ProjectTargets" cachePath="" localCacheSize="2500" noReload="true" /></helpOutput><helpOutput format="MSHelpViewer"><memberIdUrlCache path="{@LocalDataFolder}Cache\MemberIdUrl.cache" cachePath="{@LocalDataFolder}Cache\ESentMemberIdUrlCache" localCacheSize="2500" /><targets base="{@FrameworkReflectionDataFolder}" recurse="true" files="*.xml" type="{@MSHelpViewerSdkLinkType}" id="FrameworkTargets" cachePath="{@LocalDataFolder}Cache\ESentFrameworkTargetCache" localCacheSize="2500">
		{@ReferenceLinkNamespaceFiles}
	</targets><targets files="reflection.xml" type="Id" id="ProjectTargets" cachePath="" localCacheSize="2500" noReload="true" /></helpOutput><helpOutput format="Website"><memberIdUrlCache path="{@LocalDataFolder}Cache\MemberIdUrl.cache" cachePath="{@LocalDataFolder}Cache\ESentMemberIdUrlCache" localCacheSize="2500" /><targets base="{@FrameworkReflectionDataFolder}" recurse="true" files="*.xml" type="{@WebsiteSdkLinkType}" id="FrameworkTargets" cachePath="{@LocalDataFolder}Cache\ESentFrameworkTargetCache" localCacheSize="2500">
		{@ReferenceLinkNamespaceFiles}
	</targets><targets files="reflection.xml" type="Local" id="ProjectTargets" cachePath="" localCacheSize="2500" noReload="true" /></helpOutput><helpOutput format="OpenXml"><memberIdUrlCache path="{@LocalDataFolder}Cache\MemberIdUrl.cache" cachePath="{@LocalDataFolder}Cache\ESentMemberIdUrlCache" localCacheSize="2500" /><targets base="{@FrameworkReflectionDataFolder}" recurse="true" files="*.xml" type="{@WebsiteSdkLinkType}" id="FrameworkTargets" cachePath="{@LocalDataFolder}Cache\ESentFrameworkTargetCache" localCacheSize="2500">
		{@ReferenceLinkNamespaceFiles}
	</targets><targets files="reflection.xml" type="Local" id="ProjectTargets" cachePath="" localCacheSize="2500" noReload="true" /></helpOutput><helpOutput format="Markdown"><memberIdUrlCache path="{@LocalDataFolder}Cache\MemberIdUrl.cache" cachePath="{@LocalDataFolder}Cache\ESentMemberIdUrlCache" localCacheSize="2500" /><targets base="{@FrameworkReflectionDataFolder}" recurse="true" files="*.xml" type="{@WebsiteSdkLinkType}" id="FrameworkTargets" cachePath="{@LocalDataFolder}Cache\ESentFrameworkTargetCache" localCacheSize="2500">
		{@ReferenceLinkNamespaceFiles}
	</targets><targets files="reflection.xml" type="Local" id="ProjectTargets" cachePath="" localCacheSize="2500" noReload="true" /></helpOutput></component>
      </ComponentConfig>
      <ComponentConfig id="Syntax Component" enabled="True" xmlns="">
        <component id="Syntax Component">
          <syntax input="/document/reference" output="/document/syntax" renderReferenceLinks="false" />
          <generators>
    {@SyntaxFilters}
</generators>
          <containerElement name="codeSnippetGroup" addNoExampleTabs="true" includeOnSingleSnippets="false" groupingEnabled="{@CodeSnippetGrouping}" />
        </component>
      </ComponentConfig>
    </ComponentConfigurations>
    <PlugInConfigurations>
      <PlugInConfig id="Documented Entities Only" enabled="True">
        <configuration />
      </PlugInConfig>
      <PlugInConfig id="Assembly Binding Redirection" enabled="True">
        <configuration useGAC="false">
          <assemblyBinding>
            <dependentAssembly>
              <assemblyIdentity name="assemblyName" />
              <bindingRedirect oldVersion="1.0.0.0" newVersion="1.0.0.1" />
            </dependentAssembly>
          </assemblyBinding>
          <ignoreIfUnresolved>
            <assemblyIdentity name="BusinessObjects.Licensing.KeycodeDecoder" />
            <assemblyIdentity name="Microsoft.VisualStudio.TestTools.UITest.Playback" />
            <assemblyIdentity name="System.Data.SqlClient" />
          </ignoreIfUnresolved>
        </configuration>
      </PlugInConfig>
    </PlugInConfigurations>
  </PropertyGroup>
  <!-- There are no properties for these groups.  AnyCPU needs to appear in order for Visual Studio to perform
			 the build.  The others are optional common platform types that may appear. -->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Win32' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Win32' ">
  </PropertyGroup>
  <!-- Uncomment this to use the NuGet packages when SHFB is not installed locally, e.g. in the CI build pipeline.
			Update the package versions to the latest releases.
	<ItemGroup>
		<PackageReference Include="EWSoftware.SHFB" Version="2019.9.15" />
		<PackageReference Include="EWSoftware.SHFB.NETFramework" Version="4.8.0" />
	</ItemGroup>
	-->
  <!-- Import the common build targets during NuGet restore because before the packages are being installed, $(SHFBROOT) is not set yet -->
  <Import Project="$(MSBuildToolsPath)\Microsoft.Common.targets" Condition="'$(MSBuildRestoreSessionId)' != ''" />
  <!-- Import the SHFB build targets during build -->
  <Import Project="$(SHFBROOT)\SandcastleHelpFileBuilder.targets" Condition="'$(MSBuildRestoreSessionId)' == ''" />
  <!-- The pre-build and post-build event properties must appear *after* the targets file import in order to be
			 evaluated correctly. -->
  <PropertyGroup>
    <PreBuildEvent>
    </PreBuildEvent>
    <PostBuildEvent>
    </PostBuildEvent>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
  </PropertyGroup>
</Project>